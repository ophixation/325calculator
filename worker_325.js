const homo = ((Nums) => {
	const numsReversed = Object.keys(Nums).map(x => +x).filter(x => x > 0)
	const getMinDiv = (num) => {
		for (let i = numsReversed.length; i >= 0; i--)
			if (num >= numsReversed[i])
				return numsReversed[i]
	}
	const isDotRegex = /\.(\d+?)0{0,}$/
	const demolish = (num) => {
		if (typeof num !== "number")
			return ""

		if (num === Infinity || Number.isNaN(num))
			return `已超脱于325之外`

		if (num < 0)
			return `(⑨)*(${demolish(num * -1)})`.replace(/\*\(1\)/g, "")

        if (!Number.isInteger(num)) {
        	const n = (num.toString().split('.')[1] || '').length;
        	const scaled = Math.round(num * Math.pow(10, n));  // 🔧修复点
        	return `(${demolish(scaled)})/(10)^(${n})`;
        }

		if (Nums[num])
			return String(num)

		const div = getMinDiv(num)
		return (`${div}*(${demolish(Math.floor(num / div))})+` +
			`(${demolish(num % div)})`).replace(/\*\(1\)|\+\(0\)$/g, "")
	}
	//Finisher
	const finisher = (expr) => {
		expr = expr.replace(/\d+|⑨/g, (n) => Nums[n]).replace("^", "**")
		//As long as it matches ([\*|\/])\(([^\+\-\(\)]+)\), replace it with $1$2
		while (expr.match(/[\*|\/]\([^\+\-\(\)]+\)/))
			expr = expr.replace(/([\*|\/])\(([^\+\-\(\)]+)\)/, (m, $1, $2) => $1 + $2)
		//As long as it matches ([\+|\-])\(([^\(\)]+)\)([\+|\-|\)]), replace it with $1$2$3
		while (expr.match(/[\+|\-]\([^\(\)]+\)[\+|\-|\)]/))
			expr = expr.replace(/([\+|\-])\(([^\(\)]+)\)([\+|\-|\)])/, (m, $1, $2, $3) => $1 + $2 + $3)
		//As long as it matches ([\+|\-])\(([^\(\)]+)\)$, replace it with $1$2
		while (expr.match(/[\+|\-]\(([^\(\)]+)\)$/))
			expr = expr.replace(/([\+|\-])\(([^\(\)]+)\)$/, (m, $1, $2) => $1 + $2)
		//If there is a bracket in the outermost part, remove it
		if (expr.match(/^\([^\(\)]+?\)$/))
			expr = expr.replace(/^\(([^\(\)]+)\)$/, "$1")

		expr = expr.replace(/\+-/g,'-')
		return expr
	}
	return (num) => finisher(demolish(num))
})({
	105625: "325*325",
	85120: "32*532*5",
	52000: "32*5*325",
	42400: "32*53*25",
	25600: "32*5*32*5",
	24375: "3*25*325",
	18975: "3*253*25",
	17184: "32*(532+5)",
	17029: "32*532+5",
	17019: "32*532-5",
	16960: "32*53*2*5",
	16864: "32*(532-5)",
	15960: "3*2*532*5",
	13300: "(3+2)*(532*5)",
	12025: "(32+5)*325",
	12000: "3*25*32*5",
	11872: "32*(53*(2+5))",
	10560: "32*(5+325)",
	10405: "325*32+5",
	10395: "325*32-5",
	10240: "-32*(5-325)",
	9750: "3*2*5*325",
	9100: "(3+25)*325",
	8800: "(32*(53+2))*5",
	8775: "(32-5)*325",
	8490: "((32*53)+2)*5",
	8470: "((32*53)-2)*5",
	8200: "(325+3)*25",
	8160: "32*((53-2)*5)",
	8128: "3+25*325",
	8125: "((3+2)*5)*325",
	8122: "-3+(25*325)",
	8050: "(325-3)*25",
	8010: "(3*(2+532))*5",
	7986: "3*(2+(532*5))",
	7974: "-3*(2-(532*5))",
	7950: "3*2*53*25",
	7590: "3*253*2*5",
	7150: "(3-25)*-325",
	6825: "3*((2+5)*325)",
	6625: "((3+2)*53)*25",
	6400: "(3+253)*25",
	6328: "3+253*25",
	6322: "-3+(253*25)",
	6250: "(-3+253)*25",
	5920: "(32*(5+32))*5",
	5625: "3*25*3*25",
	5335: "(3+(2*532))*5",
	5323: "3+2*532*5",
	5317: "-3+((2*532)*5)",
	5313: "(3*253)*(2+5)",
	5305: "(3-(2*532))*-5",
	5280: "32*(5+(32*5))",
	5125: "32*5*32+5",
	5115: "32*5*32-5",
	5088: "(32*-53)*(2-5)",
	4960: "32*((5*32)-5)",
	4885: "((325*3)+2)*5",
	4881: "3*(2+(5*325))",
	4869: "3*(-2+(5*325))",
	4865: "((325*3)-2)*5",
	4800: "3*2*5*32*5",
	4480: "(3+25)*(32*5)",
	4320: "32*(5*(32-5))",
	4240: "32*53/2*5",
	4225: "(3+(2*5))*325",
	4125: "(3*(2+53))*25",
	4075: "((32*5)+3)*25",
	4015: "(3+(25*32))*5",
	4003: "3+25*32*5",
	4000: "(((3+2)*5)*32)*5",
	3997: "-3+(25*(32*5))",
	3990: "3/2*532*5",
	3985: "(-3+(25*32))*5",
	3981: "3*(2+(53*25))",
	3969: "-3*(2-(53*25))",
	3925: "((32*5)-3)*25",
	3825: "3*((253+2)*5)",
	3805: "((3*253)+2)*5",
	3785: "((3*253)-2)*5",
	3765: "(3*(253-2))*5",
	3575: "((3*2)+5)*325",
	3552: "32*((53*2)+5)",
	3520: "(3-25)*(-32*5)",
	3397: "32*53*2+5",
	3387: "32*53*2-5",
	3360: "3*((2+5)*(32*5))",
	3280: "(325+3)*(2*5)",
	3253: "3+2*5*325",
	3250: "(3+(2+5))*325",
	3247: "-3+((2*5)*325)",
	3232: "32*((53*2)-5)",
	3222: "(3*2)*(532+5)",
	3220: "(325-3)*(2*5)",
	3207: "3*((2*532)+5)",
	3197: "3*2*532+5",
	3187: "3*2*532-5",
	3180: "3*2*53*2*5",
	3177: "3*((2*532)-5)",
	3162: "3*(2*(532-5))",
	2925: "(3*(2-5))*-325",
	2820: "(32+532)*5",
	2775: "(3*25)*(32+5)",
	2725: "(3+(2*53))*25",
	2720: "(32*((5*3)+2))*5",
	2692: "32+532*5",
	2690: "((3*2)+532)*5",
	2685: "(3+2)*(532+5)",
	2673: "3+((2+532)*5)",
	2667: "-3+((2+532)*5)",
	2666: "3*2+532*5",
	2665: "3+2+532*5",
	2661: "3-2+532*5",
	2660: "((3-2)*532)*5",
	2659: "-3+(2+(532*5))",
	2655: "((3+2)*532)-5",
	2654: "(3*-2)+(532*5)",
	2653: "3+2*53*25",
	2650: "((3+2)*53)*(2*5)",
	2647: "-3+(2*(53*25))",
	2635: "(3+2)*(532-5)",
	2630: "((3*-2)+532)*5",
	2628: "-32+(532*5)",
	2575: "(-3+(2*53))*25",
	2560: "(3+253)*(2*5)",
	2545: "(3+(253*2))*5",
	2533: "3+253*2*5",
	2527: "-3+(253*(2*5))",
	2515: "(3-(253*2))*-5",
	2500: "(32-532)*-5",
	2496: "32*(53+25)",
	2430: "3*((2+(5*32))*5)",
	2415: "3*((25*32)+5)",
	2410: "(((32*5)*3)+2)*5",
	2406: "3*(2+((5*32)*5))",
	2405: "3*25*32+5",
	2395: "3*25*32-5",
	2394: "-3*(2-((5*32)*5))",
	2390: "(((32*5)*3)-2)*5",
	2385: "3*((25*32)-5)",
	2370: "3*((-2+(5*32))*5)",
	2296: "(325+3)*(2+5)",
	2278: "3+((2+5)*325)",
	2277: "(-3*253)*(2-5)",
	2275: "(3-(2*5))*-325",
	2272: "-3+((2+5)*325)",
	2254: "(325-3)*(2+5)",
	2250: "3*2*5*3*25",
	2240: "-32*(5-(3*25))",
	2226: "((3*2)*53)*(2+5)",
	2125: "(32+53)*25",
	2100: "(3+25)*(3*25)",
	2080: "32/5*325",
	2025: "3*(25*(32-5))",
	2016: "32*(53+(2*5))",
	1980: "3*(2*(5+325))",
	1955: "325*3*2+5",
	1950: "((3-2)+5)*325",
	1945: "325*3*2-5",
	1920: "32*(53+(2+5))",
	1878: "3+25*3*25",
	1875: "((3+2)*5)*(3*25)",
	1872: "-3+(25*(3*25))",
	1855: "((3+2)*53)*(2+5)",
	1800: "((3*25)-3)*25",
	1792: "(3+253)*(2+5)",
	1785: "(325+32)*5",
	1774: "3+(253*(2+5))",
	1768: "-3+(253*(2+5))",
	1765: "(32*(53+2))+5",
	1760: "(((3*2)+5)*32)*5",
	1755: "(32*(53+2))-5",
	1750: "(-3+253)*(2+5)",
	1721: "32*53+25",
	1706: "32*53+2*5",
	1703: "32*53+2+5",
	1699: "32*53-2+5",
	1693: "32*53+2-5",
	1689: "32*53-2-5",
	1686: "32*53-2*5",
	1671: "32*53-25",
	1657: "32+5*325",
	1655: "(325+(3*2))*5",
	1650: "(3+2)*(5+325)",
	1637: "(32*(53-2))+5",
	1631: "3*2+5*325",
	1630: "3+2+5*325",
	1627: "(32*(53-2))-5",
	1626: "3-2+5*325",
	1625: "(3-2)*(5*325)",
	1624: "(-3+2)+(5*325)",
	1620: "(325*(3+2))-5",
	1619: "(-3*2)+(5*325)",
	1617: "3*(2+(532+5))",
	1615: "(3+((2*5)*32))*5",
	1607: "(3*(2+532))+5",
	1605: "-3*(2-(532+5))",
	1603: "3+2*5*32*5",
	1600: "32*((5-3)*25)",
	1597: "(3*(2+532))-5",
	1596: "3*(2+(53*(2*5)))",
	1595: "(325-(3*2))*5",
	1593: "-32+(5*325)",
	1587: "3*(2+(532-5))",
	1585: "(3*(-2+532))-5",
	1584: "3*(-2+((53*2)*5))",
	1580: "((3*(2*53))-2)*5",
	1575: "-3*(2-(532-5))",
	1570: "((32*5)-3)*(2*5)",
	1560: "(3*((2*53)-2))*5",
	1533: "3*((253*2)+5)",
	1530: "3*((2*(53-2))*5)",
	1523: "3*253*2+5",
	1513: "3*253*2-5",
	1503: "3*((253*2)-5)",
	1475: "((3*2)+53)*25",
	1472: "32*(53-(2+5))",
	1465: "(325-32)*5",
	1450: "((3+2)+53)*25",
	1440: "(-3*((2-5)*32))*5",
	1378: "3+((2+53)*25)",
	1376: "32*(53-(2*5))",
	1375: "((3+2)*(53+2))*5",
	1372: "-3+((2+53)*25)",
	1369: "(32+5)*(32+5)",
	1357: "32+53*25",
	1350: "((3-2)+53)*25",
	1344: "32*(5+(32+5))",
	1335: "(((3+2)*53)+2)*5",
	1331: "3*2+53*25",
	1330: "3+2+53*25",
	1326: "3-2+53*25",
	1325: "((3-2)*53)*25",
	1324: "-3+(2+(53*25))",
	1320: "(-3-2)+(53*25)",
	1319: "(-3*2)+(53*25)",
	1315: "(((3+2)*53)-2)*5",
	1300: "(3-(2+5))*-325",
	1293: "-32+(53*25)",
	1290: "(3+(253+2))*5",
	1280: "32*((5*3)+25)",
	1278: "3-((2-53)*25)",
	1275: "3*((2+(5*3))*25)",
	1272: "-3-((2-53)*25)",
	1270: "((3+253)-2)*5",
	1260: "(-3+(253+2))*5",
	1258: "3+((253-2)*5)",
	1252: "-3+((253-2)*5)",
	1240: "((-3+253)-2)*5",
	1200: "(-3-(2-53))*25",
	1189: "((32+5)*32)+5",
	1179: "((32+5)*32)-5",
	1175: "(32+(5*3))*25",
	1155: "(3*(2+53))*(2+5)",
	1141: "((32*5)+3)*(2+5)",
	1135: "(3+((2+5)*32))*5",
	1131: "3*(2+((5*3)*25))",
	1123: "3+((2+5)*(32*5))",
	1120: "32*(((5*3)*2)+5)",
	1119: "3*(2+(53*(2+5)))",
	1117: "-3+(((2+5)*32)*5)",
	1115: "((3*(25*3))-2)*5",
	1110: "3*((2*(5+32))*5)",
	1107: "-3*(2-(53*(2+5)))",
	1105: "(3+(2/5))*325",
	1099: "((32*5)-3)*(2+5)",
	1095: "3*(((25*3)-2)*5)",
	1090: "(3+(2*53))*(2*5)",
	1077: "3+(2*(532+5))",
	1075: "(3+(2*(53*2)))*5",
	1072: "3+2*532+5",
	1071: "-3+(2*(532+5))",
	1066: "(-3+(2*532))+5",
	1063: "3+2*53*2*5",
	1062: "3+2*532-5",
	1057: "3+(2*(532-5))",
	1056: "32*((5+3)+25)",
	1051: "-3+(2*(532-5))",
	1050: "3*(25+325)",
	1045: "(3-((2*53)*2))*-5",
	1040: "((3/2)+5)*(32*5)",
	1036: "(3+25)*(32+5)",
	1030: "((-3+(2*53))*2)*5",
	1024: "32*5*32/5",
	1008: "32*((53/2)+5)",
	1005: "3*((2*5)+325)",
	1000: "325*3+25",
	999: "(32+5)*(32-5)",
	996: "3*(2+(5+325))",
	990: "3*(2*((5*32)+5))",
	985: "325*3+2*5",
	984: "-3*(2-(5+325))",
	982: "325*3+2+5",
	978: "325*3-2+5",
	975: "(3+(2*5))*(3*25)",
	972: "325*3+2-5",
	968: "325*3-2-5",
	966: "3*(2-(5-325))",
	965: "325*3-2*5",
	960: "(32+(5*32))*5",
	955: "3*2*5*32-5",
	954: "-3*(2+(5-325))",
	950: "325*3-25",
	945: "3*((2*-5)+325)",
	930: "3*(2*((5*32)-5))",
	928: "3+(25*(32+5))",
	925: "(3+2)*(5*(32+5))",
	922: "-3+(25*(32+5))",
	901: "((3+25)*32)+5",
	900: "-3*(25-325)",
	896: "32*(53-25)",
	891: "((3+25)*32)-5",
	869: "((32-5)*32)+5",
	864: "32*((5-3)+25)",
	859: "((32-5)*32)-5",
	855: "(3*(25+32))*5",
	853: "32*53/2+5",
	850: "(32+(5-3))*25",
	845: "(3-(2/5))*325",
	843: "32*53/2-5",
	840: "(3*2)*(5*(3+25))",
	835: "((3*(2+53))+2)*5",
	834: "3*(253+25)",
	832: "32+5*32*5",
	831: "3*(2+((53+2)*5))",
	830: "((3*2)+(5*32))*5",
	825: "(3+(2*(5*3)))*25",
	820: "(325+3)/(2/5)",
	819: "3*(-2+((53+2)*5))",
	815: "((3*(2+53))-2)*5",
	814: "(-3+25)*(32+5)",
	813: "3+((2+(5*32))*5)",
	810: "(3*(2*5))*(32-5)",
	808: "3+25*32+5",
	807: "-3+((2+(5*32))*5)",
	806: "3*2+5*32*5",
	805: "3+2+5*32*5",
	803: "3/2*532+5",
	802: "-3+((25*32)+5)",
	801: "3-2+5*32*5",
	800: "(((3-2)*5)*32)*5",
	799: "(-3+2)+((5*32)*5)",
	798: "3+25*32-5",
	795: "3*2*53/2*5",
	794: "(-3*2)+(5*(32*5))",
	793: "3/2*532-5",
	792: "(-3+(25*32))-5",
	789: "3*(253+(2*5))",
	787: "-3-((2-(5*32))*5)",
	784: "3*253+25",
	780: "3*(253+(2+5))",
	777: "(3*(2+5))*(32+5)",
	775: "(3+(25+3))*25",
	771: "3*(2+((53-2)*5))",
	770: "(3*(253+2))+5",
	769: "3*253+2*5",
	768: "3*(253-(2-5))",
	766: "3*253+2+5",
	765: "(3+(25*(3*2)))*5",
	763: "(3+(2*53))*(2+5)",
	762: "3*253-2+5",
	760: "(3*(253+2))-5",
	759: "3*(-2+((53-2)*5))",
	758: "(3*(253-2))+5",
	756: "(3+25)*(32-5)",
	755: "((3*(2-53))+2)*-5",
	753: "3+2*5*3*25",
	752: "3*253-2-5",
	750: "3*((253+2)-5)",
	749: "3*253-2*5",
	748: "(3*(253-2))-5",
	747: "-3+(2*((5*3)*25))",
	745: "3+((2*53)*(2+5))",
	739: "-3+((2*53)*(2+5))",
	738: "3*(253-(2+5))",
	736: "32*((-5+3)+25)",
	735: "-3*(((2-53)+2)*5)",
	734: "3*253-25",
	729: "3*(253-(2*5))",
	721: "(3-(2*53))*(-2-5)",
	720: "((3*25)-3)*(2*5)",
	709: "((3-25)*-32)+5",
	704: "-32*(5-(32-5))",
	703: "3+(25*(3+25))",
	700: "(((3+2)*5)+3)*25",
	699: "((-3+25)*32)-5",
	697: "-3+(25*(3+25))",
	690: "(32+(53*2))*5",
	688: "32*((53/2)-5)",
	687: "3*(((2+5)*32)+5)",
	684: "3*(253-25)",
	678: "3+(25*(32-5))",
	677: "((3*(2+5))*32)+5",
	675: "((3*(2*5))-3)*25",
	672: "-3+(25*(32-5))",
	667: "((3*(2+5))*32)-5",
	666: "3*(2*((53*2)+5))",
	663: "3+(2*(5+325))",
	661: "((325+3)*2)+5",
	660: "(3*(25-3))*(2*5)",
	657: "-3+(2*(5+325))",
	651: "((325+3)*2)-5",
	650: "325+325",
	649: "((325-3)*2)+5",
	643: "3-(2*(5-325))",
	641: "3*2*53*2+5",
	640: "(3+253)/(2/5)",
	639: "((325-3)*2)-5",
	637: "-3-(2*(5-325))",
	631: "3*2*53*2-5",
	630: "(3*((2*5)+32))*5",
	628: "3+(25*((3+2)*5))",
	625: "3*25/3*25",
	622: "-3+((25*(3+2))*5)",
	621: "3*(((2*53)*2)-5)",
	616: "(3-25)*(-3-25)",
	610: "(3-(25*(3+2)))*-5",
	606: "3*(2+((5+3)*25))",
	600: "((32-5)-3)*25",
	595: "(32+53)*(2+5)",
	594: "(3-25)*(-32+5)",
	590: "(((3*2)+53)*2)*5",
	588: "(3*(2+5))*(3+25)",
	585: "(3*((2+5)+32))*5",
	580: "(3+(2+53))*(2*5)",
	576: "32*((5*3)-(2-5))",
	569: "32+532+5",
	567: "(3*(2+5))*(32-5)",
	565: "(3+((2+53)*2))*5",
	562: "32+53*2*5",
	561: "3*(2+((5+32)*5))",
	560: "((3*2)+(53*2))*5",
	559: "32+532-5",
	555: "3*(25+(32*5))",
	553: "3-(25*(3-25))",
	550: "(((3+2)*5)-3)*25",
	549: "(32*((5*3)+2))+5",
	547: "-3+((25-3)*25)",
	546: "(3+(25*3))*(2+5)",
	545: "(((3/2)+53)*2)*5",
	544: "-32*((5+3)-25)",
	543: "3*2+532+5",
	542: "3+2+532+5",
	540: "((3-(2-53))*2)*5",
	539: "(32*((5*3)+2))-5",
	538: "3-2+532+5",
	537: "((3-2)*532)+5",
	536: "3*2+53*2*5",
	535: "((3*25)+32)*5",
	533: "3*2+532-5",
	532: "3+2+532-5",
	531: "3-2+53*2*5",
	530: "((3-2)*(53*2))*5",
	529: "-3+(2+(53*(2*5)))",
	528: "3-2+532-5",
	527: "(3-2)*(532-5)",
	526: "(-3+(2+532))-5",
	525: "(32-53)*-25",
	524: "(3*-2)+(53*(2*5))",
	523: "3+(((2*53)-2)*5)",
	522: "-3-(2-(532-5))",
	521: "(3*-2)+(532-5)",
	520: "(((3-2)-53)*2)*-5",
	517: "((3+253)*2)+5",
	515: "((3/2)-53)*(2*-5)",
	514: "3+253*2+5",
	513: "3-(((2-53)*2)*5)",
	512: "32*(5+((3*2)+5))",
	510: "3*((2*5)+(32*5))",
	508: "-3+((253*2)+5)",
	507: "((3+253)*2)-5",
	505: "32*5*3+25",
	504: "3+253*2-5",
	501: "3*(2+((5*32)+5))",
	500: "((3+2)+(5*3))*25",
	498: "-3+((253*2)-5)",
	495: "(-32+532)-5",
	491: "(3*(2+(5*32)))+5",
	490: "32*5*3+2*5",
	489: "-3*(2-(5+(32*5)))",
	487: "32*5*3+2+5",
	486: "(3*((2/5)+32))*5",
	485: "32*5+325",
	484: "(3-25)*(3-25)",
	483: "32*5*3-2+5",
	481: "(3*(2+(5*32)))-5",
	480: "3*25*32/5",
	479: "(-3*(2-(5*32)))+5",
	477: "32*5*3+2-5",
	475: "(-3+(25-3))*25",
	474: "3*(((-2/5)+32)*5)",
	473: "32*5*3-2-5",
	471: "3*(2-(5-(32*5)))",
	470: "32*5*3-2*5",
	469: "(-3*(2-(5*32)))-5",
	468: "3*(2*(53+25))",
	465: "3*(((25*3)*2)+5)",
	462: "3*((25-3)*(2+5))",
	460: "(((3*2)*(5*3))+2)*5",
	459: "3*((2-53)*(2-5))",
	456: "3*(2+(5*(3*(2*5))))",
	455: "32*5*3-25",
	450: "((3*(2+5))-3)*25",
	448: "(32*(5-3))*(2+5)",
	445: "3*25*3*2-5",
	444: "3*(-2+(((5*3)*2)*5))",
	441: "(3*(2+5))*(3*(2+5))",
	440: "((((3*2)*5)*3)-2)*5",
	435: "(32+(53+2))*5",
	430: "(((3+25)*3)+2)*5",
	428: "3+((2+(5*3))*25)",
	426: "3*(2+(5*(3+25)))",
	425: "(32-(5*3))*25",
	422: "-3+((2+(5*3))*25)",
	421: "((3+(2*5))*32)+5",
	420: "(3*2)*(-5+(3*25))",
	416: "((3-(2/5))*32)*5",
	415: "(32+(53-2))*5",
	414: "3*(-2+(5*(3+25)))",
	413: "((3*2)+53)*(2+5)",
	411: "((3+(2*5))*32)-5",
	410: "((3*(25+3))-2)*5",
	407: "32+5*3*25",
	406: "(3+(2+53))*(2+5)",
	405: "-3*(25-(32*5))",
	403: "32+(53*(2+5))",
	400: "3*25+325",
	399: "3*(-2-((5-32)*5))",
	397: "-3+(2*((5+3)*25))",
	395: "(((32-5)*3)-2)*5",
	393: "3*((2*53)+25)",
	390: "3*2/5*325",
	388: "3+((2+53)*(2+5))",
	385: "(3+(2*(5+32)))*5",
	384: "32*((5*3)+(2-5))",
	382: "-3+((2+53)*(2+5))",
	381: "3*2+5*3*25",
	380: "3+2+5*3*25",
	378: "3*(2*(53+(2*5)))",
	377: "(3*2)+(53*(2+5))",
	376: "3-2+5*3*25",
	375: "(((3-2)*5)*3)*25",
	374: "-3+(2+((5*3)*25))",
	373: "3+((2*(5+32))*5)",
	372: "(3-2)+(53*(2+5))",
	371: "(3-2)*(53*(2+5))",
	370: "(-32+(53*2))*5",
	369: "(-3*2)+(5*(3*25))",
	368: "3+(((25*3)-2)*5)",
	367: "-3+((2*(5+32))*5)",
	366: "-3-(2-(53*(2+5)))",
	365: "(3*-2)+(53*(2+5))",
	364: "(3+(2*5))*(3+25)",
	362: "32+5+325",
	360: "3*(2*((53+2)+5))",
	357: "(((3*2)+5)*32)+5",
	355: "3*2*5+325",
	354: "-3-((2-53)*(2+5))",
	353: "3+25+325",
	352: "32-5+325",
	351: "(3+(2*5))*(32-5)",
	350: "((3+2)*5)+325",
	348: "3*((2*53)+(2*5))",
	347: "325-3+25",
	346: "(3*(2+5))+325",
	345: "((32+5)+32)*5",
	343: "3*2*53+25",
	340: "((3*(25-3))+2)*5",
	339: "-32+(53*(2+5))",
	338: "3+2*5+325",
	336: "3*2+5+325",
	335: "3+2+5+325",
	334: "325-(3*(2-5))",
	333: "3+(2*((5*32)+5))",
	332: "325-3+2*5",
	331: "3-2+5+325",
	330: "((3-2)*5)+325",
	329: "325-3+2+5",
	328: "3+2*5*32+5",
	327: "3*((2*53)-(2-5))",
	326: "3*2-5+325",
	325: "325",
	324: "325-3*2+5",
	322: "-3+(((2*5)+3)*25)",
	321: "3-2-5+325",
	320: "32*5+32*5",
	319: "325-3+2-5",
	318: "3-2*5+325",
	317: "(3*((2*53)-2))+5",
	316: "(3*(2-5))+325",
	315: "325-3-2-5",
	314: "325-3*2-5",
	313: "3-(2*(5-(32*5)))",
	312: "325-3-2*5",
	311: "3*2*53-2-5",
	310: "((3*(2*5))+32)*5",
	309: "3*(((2*53)+2)-5)",
	308: "3*2*53-2*5",
	307: "32+((53+2)*5)",
	305: "(((3*2)+53)+2)*5",
	304: "325-(3*(2+5))",
	303: "3-25+325",
	301: "((3*2)*(53-2))-5",
	300: "3*((25*3)+25)",
	298: "325-32+5",
	297: "325-3-25",
	295: "((32-5)+32)*5",
	293: "3*2*53-25",
	291: "3*((2*(53-2))-5)",
	290: "((3+2)*53)+25",
	288: "325-32-5",
	287: "32+((53-2)*5)",
	286: "(-3-(2*5))*(3-25)",
	285: "(((3+2)*5)+32)*5",
	283: "3+((2*5)*(3+25))",
	282: "-3+((25+32)*5)",
	281: "3+253+25",
	280: "(3+(2+5))*(3+25)",
	278: "3+(25*((3*2)+5))",
	277: "-3+(2*(5*(3+25)))",
	276: "(3*2)*(53-(2+5))",
	275: "-3+(253+25)",
	274: "(-3+2)+((53+2)*5)",
	273: "3+((2*5)*(32-5))",
	272: "(((3+2)*53)+2)+5",
	270: "(-3+(25+32))*5",
	269: "(-3*2)+((53+2)*5)",
	268: "3+2*53/2*5",
	267: "(3+2)*(53+(2/5))",
	266: "3+253+2*5",
	265: "((3*(2+5))+32)*5",
	263: "3+253+2+5",
	262: "3+((2+5)*(32+5))",
	261: "(3*2)+((53-2)*5)",
	260: "-3+(253+(2*5))",
	259: "3+253-2+5",
	258: "3*(2*(53-(2*5)))",
	257: "((-3+253)+2)+5",
	256: "(3-2)+((53-2)*5)",
	255: "(-32-53)*(2-5)",
	254: "-3+(2+((53-2)*5))",
	253: "3+253+2-5",
	252: "3*(2*((5+32)+5))",
	250: "325-3*25",
	249: "3+253-2-5",
	248: "3-((2-(53-2))*5)",
	247: "-3+(253+(2-5))",
	246: "3+253-2*5",
	245: "3/2*5*32+5",
	243: "3*((2*53)-25)",
	242: "((3*-2)-5)*(3-25)",
	240: "3*(2+(53+25))",
	238: "((32+5)-3)*(2+5)",
	237: "3*((2*(5+32))+5)",
	236: "(3*((25*3)+2))+5",
	235: "3*25+32*5",
	234: "3*(((25*3)-2)+5)",
	232: "32+((5+3)*25)",
	231: "3+253-25",
	230: "(3+2)*(53-(2+5))",
	229: "((3-(2*5))*-32)+5",
	228: "3*(-2+(53+25))",
	227: "(3*(2*(5+32)))+5",
	226: "(3*((25*3)+2))-5",
	225: "-3+(253-25)",
	224: "(3*((25*3)-2))+5",
	223: "-32+((53-2)*5)",
	222: "3*25*3+2-5",
	220: "3+2*53*2+5",
	219: "((-3+(2*5))*32)-5",
	218: "3*25*3-2-5",
	217: "32+(5*(32+5))",
	216: "3*(2-(5-(3*25)))",
	215: "((3*25)-32)*5",
	214: "(3*((25*3)-2))-5",
	213: "3+(((2*5)+32)*5)",
	211: "((-3+(2*53))*2)+5",
	210: "((-32+53)*2)*5",
	207: "3*((2*(5+32))-5)",
	206: "(3*2)+((5+3)*25)",
	205: "3+(2+((5+3)*25))",
	204: "3*((25*3)-(2+5))",
	203: "(((3/2)+5)*32)-5",
	201: "(3-2)+((5+3)*25)",
	200: "3*25*3-25",
	199: "3+((2+5)*(3+25))",
	198: "(3*2)*(5+(3+25))",
	197: "32+5+32*5",
	196: "(3-(2*5))*(-3-25)",
	195: "(3-(2/5))*(3*25)",
	194: "(3*-2)+((5+3)*25)",
	193: "-3+((2+5)*(3+25))",
	192: "((32/5)+32)*5",
	191: "32-(53*(2-5))",
	190: "(3*(2+53))+25",
	189: "3*(2*((53/2)+5))",
	188: "3+25+32*5",
	187: "32+5*32-5",
	186: "3*(25+(32+5))",
	185: "(3-2)*((5+32)*5)",
	184: "-3+(2+(5*(32+5)))",
	183: "3*(((25+3)*2)+5)",
	182: "32*5-3+25",
	181: "(3*(2+5))+(32*5)",
	180: "((3+2)*(5+32))-5",
	179: "(3*-2)+((5+32)*5)",
	178: "(3*(-2+53))+25",
	177: "(3+((2/5)+32))*5",
	176: "(3*(25+32))+5",
	175: "((32+53)*2)+5",
	174: "3*(2+((53-2)+5))",
	173: "3+2*5+32*5",
	172: "32+(5*(3+25))",
	171: "3*2+5+32*5",
	170: "3+2+5+32*5",
	169: "((325+3)/2)+5",
	168: "(3*2)*(53-25)",
	167: "32+(5*(32-5))",
	166: "(3*(25+32))-5",
	165: "325-32*5",
	164: "3*2*53/2+5",
	163: "3+25*32/5",
	162: "(3*2)*((5-3)+25)",
	161: "3*2+5*32-5",
	160: "32*5",
	159: "3+(2*(53+25))",
	158: "3+25*3*2+5",
	157: "-3+(25*(32/5))",
	156: "3*((25+32)-5)",
	155: "32*((5/-32)+5)",
	154: "3*2*53/2-5",
	153: "3-2*5+32*5",
	152: "(-3*(2-(53-2)))+5",
	151: "(3*(2-5))+(32*5)",
	150: "3*25+3*25",
	149: "32*5-3*2-5",
	148: "3+25*3*2-5",
	147: "(32-53)*(-2-5)",
	146: "(3*2)+(5*(3+25))",
	145: "3+(2+(5*(3+25)))",
	144: "3*(((2*53)/2)-5)",
	143: "32+53*2+5",
	142: "32-(5*(3-25))",
	141: "3*((25-3)+25)",
	140: "(3*(2+53))-25",
	139: "(((3*25)-3)*2)-5",
	138: "3-25+32*5",
	137: "((3*(25-3))*2)+5",
	136: "((32+5)*3)+25",
	135: "(3+2)*((5-3)+25)",
	134: "3+2*53+25",
	133: "3+2/5*325",
	132: "32*5-3-25",
	131: "3*(2+((5/3)*25))",
	130: "32*5-3*2*5",
	129: "(3*2)*((53/2)-5)",
	128: "(-3+(2*53))+25",
	127: "-3+((2/5)*325)",
	126: "3*((2+(5*3))+25)",
	125: "325/(3-(2/5))",
	124: "(-3+2)+(5*((3+2)*5))",
	123: "32*5-32-5",
	122: "(3*((2+5)+32))+5",
	121: "(3*((2*5)+32))-5",
	120: "((-3+253)/2)-5",
	119: "3+2*53+2*5",
	118: "3+(((2+53)*2)+5)",
	117: "3/(2/(53+25))",
	116: "3+2+53*2+5",
	115: "(32-(53+2))*-5",
	114: "3*((2*5)+(3+25))",
	113: "3-(((2*5)-32)*5)",
	112: "3*25+32+5",
	111: "(3-2)-(5*(3-25))",
	110: "32+53+25",
	109: "3-((2-532)/5)",
	108: "-32+(5*(3+25))",
	107: "3*2+53*2-5",
	106: "((32-5)*3)+25",
	105: "3*((-25+32)*5)",
	104: "3-(((2-5)*32)-5)",
	103: "3+25+3*25",
	102: "3*25+32-5",
	101: "(3-2)*((53*2)-5)",
	100: "(32-532)/-5",
	99: "3+2*53-2*5",
	98: "3+((25-(3*2))*5)",
	97: "3*25-3+25",
	96: "3*(((2*5)-3)+25)",
	95: "32+53+2*5",
	94: "3-(((2-5)*32)+5)",
	93: "3*(25+((3-2)+5))",
	92: "32+53+2+5",
	91: "(3*(25-3))+25",
	90: "3*(2+(53-25))",
	89: "(32*(5-3))+25",
	88: "32+53-2+5",
	87: "3*((2+(5-3))+25)",
	86: "((32+5)*3)-25",
	85: "32*5-3*25",
	84: "3+2*53-25",
	83: "3+2+53+25",
	82: "32+53+2-5",
	81: "3-2+5+3*25",
	80: "((3-2)*5)+(3*25)",
	79: "3-2+53+25",
	78: "32+53-2-5",
	77: "(-3+(2+53))+25",
	76: "3*2-5+3*25",
	75: "3*25",
	74: "32+5+32+5",
	73: "(-3-2)+(53+25)",
	72: "32+5*3+25",
	71: "3-2-5+3*25",
	70: "(325/(3+2))+5",
	69: "-32+((53*2)-5)",
	68: "3-2*5+3*25",
	67: "3+2*5*32/5",
	66: "3*2+53+2+5",
	65: "3+25+32+5",
	64: "32+5+32-5",
	63: "(32-53)*(2-5)",
	62: "3*2+53-2+5",
	61: "3+2+53-2+5",
	60: "32+53-25",
	59: "32+5-3+25",
	58: "3+2*5*3+25",
	57: "3*2*5+32-5",
	56: "3+25+3+25",
	55: "3+25+32-5",
	54: "32-5+32-5",
	53: "3+25*3-25",
	52: "3*2*5-3+25",
	51: "3+2+53-2-5",
	50: "3+25-3+25",
	49: "32-5-3+25",
	48: "3*25-32+5",
	47: "3*25-3-25",
	46: "-32+(53+25)",
	45: "3+2+5*3+25",
	44: "(-3+(25-3))+25",
	43: "32+((53+2)/5)",
	42: "32-5*3+25",
	41: "(3*(25-3))-25",
	40: "3+2*5+32-5",
	39: "3/25*325",
	38: "3*25-32-5",
	37: "32+5",
	36: "-3*((25-32)-5)",
	35: "3+2*5-3+25",
	34: "3*2+53-25",
	33: "3+2+53-25",
	32: "-3-((25-32)*5)",
	31: "(-32+53)+(2*5)",
	30: "3*2*5",
	29: "3-2+53-25",
	28: "3+25",
	27: "32-5",
	26: "(3*(-25+32))+5",
	25: "32*5/32*5",
	24: "-32+((53-2)+5)",
	23: "((-3-2)+53)-25",
	22: "32+5*3-25",
	21: "3-2*5+3+25",
	20: "(3+(25-32))*-5",
	19: "3+(((2-5)*3)+25)",
	18: "-32+((5-3)*25)",
	17: "3+25-3*2-5",
	16: "(-3*(25-32))-5",
	15: "3-25+32+5",
	14: "((-32+53)-2)-5",
	13: "3+2*5",
	12: "((3+25)+32)/5",
	11: "3*2+5",
	10: "3+2+5",
	9: "3*25*3/25",
	8: "(-32+(5*3))+25",
	7: "-3+2*5",
	6: "3-2+5",
	5: "(3-2)*5",
	4: "-3+(2+5)",
	3: "(32-53)/(-2-5)",
	2: "(3-(25-32))/5",
	1: "3*2-5",
	0: "3+2-5",
	"⑨": "-3*2+5"
})

if (typeof module === 'object' && module.exports)
	module.exports = homo

function extra325Modes(inputNum) {
    const result = {
        商余模式: "",
        周哥模式: ""
    };

    if (typeof inputNum !== 'number' || isNaN(inputNum)) return result;

    const intPart = Math.trunc(inputNum); // 整数部分
    const fracPart = +(inputNum - intPart).toFixed(10); // 小数部分保留精度
    const quotient = Math.trunc(intPart / 325);
    const remainder = (intPart % 325) + fracPart;

    if (inputNum >= 0) {
        result["商余模式"] = `${inputNum} = ${quotient} * 325 + ${remainder}`;
    } else {
        result["商余模式"] = `${inputNum} = ${quotient} * 325 - ${Math.abs(remainder)}`;
    }

    const div = inputNum / 325;
    const rounded = (Math.round(div * 10) / 10).toFixed(1);
    result["周哥模式"] = `${rounded}周之力！`;

    return result;
}